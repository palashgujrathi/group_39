source('~/Documents/logical example R.R')
source('~/Documents/logical example R.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Documents/add.R')
ls()
add(1,2)
add(4,10)
add
add(10,30)
add(10,20)
source('~/Documents/add.R')
add
add (4,9)
add(4,9)
add(4,9)
add(1,2)
add(1,2)
install.packages("lubridate")
library(lubridate)
ymd(20190410)
mdy("4/10/2019")
search()
7 %% 2
7 %% 3
7 %% 4
source('~/Documents/add.R')
source('~/Documents/add.R')
source('~/Documents/add.R')
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(shiny)
library(plotly)
library(ggplot2)
install.packages("plotly")
library(shiny)
library(plotly)
library(ggplot2)
library(shinythemes)
library(usmap)
install.packages("usmap")
library(usmap)
data <- read.csv("Minimum Wage Data.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/info201/group_39")
library(usmap)
data <- read.csv("Minimum Wage Data.csv", stringsAsFactors = FALSE)
options(scipen=999)
# Define UI for application that draws a histogram
shinyUI(fluidPage(theme = shinytheme("cerulean"),
navbarPage("US states minimum wages",
tabPanel("Introduction",
tags$h1("INFO 201-Group 39"), br(),
tags$ul(
tags$li("Palash Gujrathi"),
tags$li("Shilpa Narayanan"),
tags$li("Keeke Karuri")
),
# tags$b(strong("Palash Gujrathi")), br(),
# tags$b(strong("Shilpa Narayanan")), br(),
# tags$b(strong("Keeke Karuri")),
br(),
tags$code("About"),
p(strong("The dataset we are utilizing in this app is comprised of data pertaining to the
US state minimum wages from 1968-2017. This dataset was taken from kaggle.com, and the data
itself was from the US Department of Laborâ€™s website. Within this data set, the values include year,
state, high and low values of minimum wages from each of the years mentioned, consumer price index average
per year, and the 2018 equivalent dollars for both the high and low values.")), br(),
img(src = "https://www.shareicon.net/data/512x512/2017/01/06/868291_business_512x512.png",
style = "display: block; margin-left: auto; margin-right: auto; width: 50%;")),
tabPanel("Map",
sidebarLayout(
sidebarPanel(
selectInput(inputId="year", label = "Select a year", choices = c(1968:2017),
selected = "1968")
),
# Show a plot of the generated distribution
mainPanel(
tabsetPanel(
tabPanel("Map", plotOutput("mapHighOutput"),
textOutput("summary"))
)
)
)),
tabPanel("Plots",
# Application title
# titlePanel("Minimum wages across US states from 1968 to 2017"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
selectInput(inputId="states",
label = "Select state", choices=state.name,
selected = "Washington", multiple = TRUE),
# selectInput(inputId="year", label = "Select a year", choices = c(1968:2017),
#             selected = "1968"),
sliderInput("years",
"Range of years",
min = 1968,
max = 2017,
value = c(1968, 2000))),
# Show a plot of the generated distribution
mainPanel(
tabsetPanel(
# tabPanel("Map", plotOutput("mapHighOutput"), textOutput("summary")),
#tabPanel("Map", plotOutput("mapLowOutput")),
tabPanel("CPI Average", plotlyOutput("cpiAvg"),
textOutput("CPIsummary")),
tabPanel("Minimum Wage", plotlyOutput("highPlot"),
textOutput("wageSummary"))
)
)
)),
#here
tabPanel("Conclusion")
)))
library(shiny)
library(ggplot2)
library(plotly)
library(usmap)
data <- read.csv("Minimum Wage Data.csv", stringsAsFactors = FALSE)
# Define server logic required to draw a histogram
shinyServer <- function(input, output) {
output$cpiAvg <- renderPlotly({
state_name <- filter(data, State==input$states)
year_selected <- filter(state_name, Year>=input$years[1], Year<=input$years[2])
print(year_selected)
x <- year_selected$Year
y <- year_selected$CPI.Average
# p <- ggplot(year_selected) +
#   geom_line(aes(x = Year, y = CPI.Average, color = State))
p <- plot_ly(year_selected, x = ~x, y = ~y, color = year_selected$State, type = 'scatter', mode = 'lines') %>%
layout(xaxis = list(title = "YEARS"), yaxis = list(title = "CPI ($)"),
title = paste("CPI ($) vs YEARS", min(input$years), "-", max(input$years)), margin = list(t=120))
return(p)
})
output$highPlot <- renderPlotly({
state_name <- filter(data, State %in% input$states)
year_selected <- filter(state_name, Year>=input$years[1], Year<=input$years[2])
x <- year_selected$Year
y <- year_selected$High.Value
p <- plot_ly(year_selected, x = ~x, y = ~y, color = ~year_selected$State, type = 'scatter', mode = 'lines') %>%
layout(xaxis = list(title = "YEARS"), yaxis = list(title = "MINIMUM WAGE ($)"),
title = paste("MINIMUM WAGE ($) vs YEARS", min(input$years), "-", max(input$years)), margin = list(t=120))#FF8C00
# p <- ggplot(year_selected) +
#   geom_line(aes(x = Year, y = High.Value, color = State)) +
#   ggtitle("CPI vs Time") + theme(plot.title = element_text(hjust = 0.5, size=16))
return(p)
})
output$mapHighOutput <- renderPlot({
year_range <- filter(data, Year==input$year)
colnames(year_range)[2] <- "state"
graph <- plot_usmap("state", data = year_range, values = "High.Value", lines = "white") +
scale_fill_continuous(name = "High Value", label = scales::comma) +
ggtitle("Minimum wage in ", paste0(input$year)) +
theme(legend.position = "right")
return(graph)
})
output$summary <- renderText({
paste0("The map above displays the highest minimum wage for each state for the given year in the United States.
The states with a lighter shade of blue indicate high minimum wage,
whereas the states with a darker shade of blue indicate the lower minimum wage.")
})
output$CPIsummary <- renderText({
paste0("The plot above shows the change in CPI(Consumer Price Index) over the given range of years. CPI is defiened as
The Consumer Price Index (CPI) is a measure that examines the weighted average of prices of a basket of consumer
goods and services, such as transportation, food and medical care. It is calculated by taking price changes for
each item in the predetermined basket of goods and averaging them.")
})
output$wageSummary <- renderText({
paste0("The plot above shows the change in minimum wage over the given range of years for the given state. You can select multiple
states to observe minimum wage for different states at once. The Y-axis represents the minimum wage value in dollars and the
X-axis represents the time in years.")
})
# output$mapLowOutput <- renderPlot({
#   state_name <- filter(data, Year==input$year)
#   # year_selected <- filter(state_name, Year>=input$years[1] & Year<=input$years[2])
#   # x <- year_selected$Year
#   # y <- year_selected$High.Value
#   colnames(state_name)[2] <- "state"
#   graph <- plot_usmap("state", data = state_name, values = "Low.Value", lines = "white") +
#     scale_fill_continuous(name = "Low Value", label = scales::comma) +
#     ggtitle("Lowest minimum wage in ", paste0(input$year)) +
#     theme(legend.position = "right")
#   return(graph)
# })
}
runApp()
install.packages("shinythemes")
install.packages("shinythemes")
library(shinythemes)
library(shinythemes)
data <- read.csv("Minimum Wage Data.csv", stringsAsFactors = FALSE)
# Define server logic required to draw a histogram
shinyServer <- function(input, output) {
output$cpiAvg <- renderPlotly({
state_name <- filter(data, State==input$states)
year_selected <- filter(state_name, Year>=input$years[1], Year<=input$years[2])
print(year_selected)
x <- year_selected$Year
y <- year_selected$CPI.Average
# p <- ggplot(year_selected) +
#   geom_line(aes(x = Year, y = CPI.Average, color = State))
p <- plot_ly(year_selected, x = ~x, y = ~y, color = year_selected$State, type = 'scatter', mode = 'lines') %>%
layout(xaxis = list(title = "YEARS"), yaxis = list(title = "CPI ($)"),
title = paste("CPI ($) vs YEARS", min(input$years), "-", max(input$years)), margin = list(t=120))
return(p)
})
output$highPlot <- renderPlotly({
state_name <- filter(data, State %in% input$states)
year_selected <- filter(state_name, Year>=input$years[1], Year<=input$years[2])
x <- year_selected$Year
y <- year_selected$High.Value
p <- plot_ly(year_selected, x = ~x, y = ~y, color = ~year_selected$State, type = 'scatter', mode = 'lines') %>%
layout(xaxis = list(title = "YEARS"), yaxis = list(title = "MINIMUM WAGE ($)"),
title = paste("MINIMUM WAGE ($) vs YEARS", min(input$years), "-", max(input$years)), margin = list(t=120))#FF8C00
# p <- ggplot(year_selected) +
#   geom_line(aes(x = Year, y = High.Value, color = State)) +
#   ggtitle("CPI vs Time") + theme(plot.title = element_text(hjust = 0.5, size=16))
return(p)
})
output$mapHighOutput <- renderPlot({
year_range <- filter(data, Year==input$year)
colnames(year_range)[2] <- "state"
graph <- plot_usmap("state", data = year_range, values = "High.Value", lines = "white") +
scale_fill_continuous(name = "High Value", label = scales::comma) +
ggtitle("Minimum wage in ", paste0(input$year)) +
theme(legend.position = "right")
return(graph)
})
output$summary <- renderText({
paste0("The map above displays the highest minimum wage for each state for the given year in the United States.
The states with a lighter shade of blue indicate high minimum wage,
whereas the states with a darker shade of blue indicate the lower minimum wage.")
})
output$CPIsummary <- renderText({
paste0("The plot above shows the change in CPI(Consumer Price Index) over the given range of years. CPI is defiened as
The Consumer Price Index (CPI) is a measure that examines the weighted average of prices of a basket of consumer
goods and services, such as transportation, food and medical care. It is calculated by taking price changes for
each item in the predetermined basket of goods and averaging them.")
})
output$wageSummary <- renderText({
paste0("The plot above shows the change in minimum wage over the given range of years for the given state. You can select multiple
states to observe minimum wage for different states at once. The Y-axis represents the minimum wage value in dollars and the
X-axis represents the time in years.")
})
# output$mapLowOutput <- renderPlot({
#   state_name <- filter(data, Year==input$year)
#   # year_selected <- filter(state_name, Year>=input$years[1] & Year<=input$years[2])
#   # x <- year_selected$Year
#   # y <- year_selected$High.Value
#   colnames(state_name)[2] <- "state"
#   graph <- plot_usmap("state", data = state_name, values = "Low.Value", lines = "white") +
#     scale_fill_continuous(name = "Low Value", label = scales::comma) +
#     ggtitle("Lowest minimum wage in ", paste0(input$year)) +
#     theme(legend.position = "right")
#   return(graph)
# })
}
shiny::runApp()
